library(htmlwidgets)
library(devtools)
setwd("C:/Users/Ewa/Desktop/INTERACTIVE XAI FOR DALEX/6. (January)/ceterisParibusD3/")
getwd()
devtools::load_all()
document()
build()
install()
# sprawdzam czy help dziala
library(ceterisParibusD3)
system("R CMD Rd2pdf . --title=Package ceterisParibusD3 --output=./manual.pdf --force")
library("DALEX")
library("randomForest")
library("ceterisParibus")
library("rpart")
library("e1071")
library(ceterisParibusD3)
apartments_rf_model <- randomForest(m2.price ~ construction.year + surface + floor +
no.rooms + district,
data = apartments)
explainer_rf <- explain(apartments_rf_model,
data = apartmentsTest[,2:6],
y = apartmentsTest$m2.price)
apartments_A <- apartmentsTest[c(958,955),]
apartments_A[1,]$floor <- NA
cp_rf_A <- ceteris_paribus(explainer_rf, apartments_A, y = apartments_A$m2.price)
plot(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("surface","construction.year", 'no.rooms'))
ceterisParibusD3(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
color = 'surface',
selected_variables = c("surface","construction.year", 'no.rooms', 'district'), add_table = TRUE,
height  = 800, width = 800, is_categorical_ordered = TRUE)
plot(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("district"))
apartments_rf_model <- randomForest(m2.price ~ construction.year + surface + floor +
no.rooms + district,
data = apartments)
explainer_rf <- explain(apartments_rf_model,
data = apartmentsTest[,2:6],
y = apartmentsTest$m2.price)
apartments_A <- apartmentsTest[c(958,955),]
cp_rf_A <- ceteris_paribus(explainer_rf, apartments_A, y = apartments_A$m2.price)
plot(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("surface","construction.year", 'no.rooms'))
ceterisParibusD3(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
color = 'surface',
selected_variables = c("surface","construction.year", 'no.rooms', 'district'), add_table = TRUE,
height  = 800, width = 800, is_categorical_ordered = TRUE)
plot(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("surface","construction.year", 'no.rooms'))
ceterisParibusD3(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
color = 'surface',
selected_variables = c("surface","construction.year", 'no.rooms', 'district'), add_table = TRUE,
height  = 800, width = 800, is_categorical_ordered = TRUE)
devtools::load_all()
document()
build()
install()
apartments_rf_model <- randomForest(m2.price ~ construction.year + surface + floor +
no.rooms + district,
data = apartments)
explainer_rf <- explain(apartments_rf_model,
data = apartmentsTest[,2:6],
y = apartmentsTest$m2.price)
apartments_A <- apartmentsTest[c(958,955),]
cp_rf_A <- ceteris_paribus(explainer_rf, apartments_A, y = apartments_A$m2.price)
plot(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("surface","construction.year", 'no.rooms'))
ceterisParibusD3(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
color = 'surface',
selected_variables = c("surface","construction.year", 'no.rooms', 'district'), add_table = TRUE,
height  = 800, width = 800, is_categorical_ordered = TRUE)
plot(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("district"))
ceterisParibusD3(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("district"), add_table = TRUE, height  = 800, width = 800,
is_categorical_ordered = FALSE)
####################################
# example 2 ICE lines colored by categorical variable
####################################
apartments_C <- select_sample(apartmentsTest, n = 5)
cp_rf_C <- ceteris_paribus(explainer_rf, apartments_C, y = apartments_C$m2.price)
plot(cp_rf_C,
show_profiles = TRUE, show_observations = FALSE,
color = "district", alpha = 1,
selected_variables = c("surface","construction.year", "district", 'no.rooms', 'floor'))
# no need to include color variable in selected_variables
ceterisParibusD3(cp_rf_C, show_profiles = TRUE, show_observations = FALSE,
color = 'district', alpha_ices = 1,
selected_variables = c("surface","construction.year", 'no.rooms', 'floor'), height = 600,
width = 800)
####################################
# example 3 ICE lines colored by contiuous variable
####################################
apartments_C <- select_sample(apartmentsTest, n = 15)
cp_rf_C <- ceteris_paribus(explainer_rf, apartments_C, y = apartments_C$m2.price)
plot(cp_rf_C,
show_profiles = TRUE, show_observations = TRUE,
color = "surface", alpha = 1,
selected_variables = c("surface","construction.year"))
ceterisParibusD3(cp_rf_C, show_profiles = TRUE, show_observations = TRUE,
color = 'surface', alpha_ices = 1,
selected_variables = c("surface","construction.year"))
####################################
# example 4 ICE lines, rugs, residuals, points, all with custom colors
####################################
apartments_C <- select_sample(apartmentsTest, n = 15)
cp_rf_C <- ceteris_paribus(explainer_rf, apartments_C, y = apartments_C$m2.price)
plot(cp_rf_C,
show_profiles = TRUE, show_observations = TRUE, show_rugs = TRUE,
show_residuals = TRUE,
color = "blue", color_points = "orange", color_residuals = "red", color_rugs = "green",
alpha = 0.3, alpha_points = 0.3, alpha_residuals = 0.5, alpha_rugs = 1,
size_points = 4, size_rugs = 0.5,
selected_variables = c("surface","construction.year"))
ceterisParibusD3(cp_rf_C,
show_profiles = TRUE, show_observations = TRUE, show_rugs = TRUE,
show_residuals = TRUE,
color = "blue", color_points = "orange", color_residuals = "red", color_rugs = "green",
alpha_ices = 0.3, alpha_points = 0.3, alpha_residuals = 0.5, alpha_rugs = 1,
size_points = 4,  size_rugs = 0.5,
selected_variables = c("surface","construction.year"))
####################################
# example 5 ICE lines with PDP lines
####################################
apartments_C <- select_sample(apartmentsTest, n = 10)
cp_rf_C <- ceteris_paribus(explainer_rf, apartments_C, y = apartments_C$m2.price)
plot(cp_rf_C,
show_observations = FALSE, show_rugs = TRUE,
show_residuals = TRUE, color_residuals = "red", size_residuals = 2,
selected_variables = c("surface","construction.year")) +
ceteris_paribus_layer(cp_rf_C,
show_observations = FALSE, show_rugs = FALSE,
aggregate_profiles = mean, size = 2, alpha = 1,
selected_variables = c("surface","construction.year"))
ceterisParibusD3(cp_rf_C,
show_observations = FALSE, show_rugs = TRUE,
show_residuals = TRUE, color_residuals = "red", size_residuals = 2,
selected_variables = c("surface","construction.year"),
aggregate_profiles = 'mean', size_pdps = 5, alpha_pdps = 1, width = 800, height = 600,
size_rugs = 0.5)
apartments_svm_model <- svm(m2.price ~ construction.year + surface + floor +
no.rooms + district, data = apartments)
apartments_rpart_model <- best.rpart(m2.price ~ construction.year + surface + floor + no.rooms + district, data = apartments)
explainer_svm <- explain(apartments_svm_model,
data = apartmentsTest[,2:6], y = apartmentsTest$m2.price)
explainer_rpart <- explain(apartments_rpart_model,
data = apartmentsTest[,2:6], y = apartmentsTest$m2.price)
apartments_E <- apartmentsTest[958,]
cp_rf_E <- ceteris_paribus(explainer_svm, apartments_E, y = apartments_E$m2.price)
apartments_F <- apartmentsTest[958,]
cp_rpart_F <- ceteris_paribus(explainer_rpart, apartments_F, y = apartments_F$m2.price)
plot(cp_rf_A, cp_rf_E, cp_rpart_F,
color = "_label_",
selected_variables = c("surface","construction.year"))
ceterisParibusD3(cp_rf_A, cp_rf_E, cp_rpart_F,
color = "_label_",
selected_variables = c("surface","construction.year"), width = 800)
plot(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("surface","district"))
ceterisParibusD3(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("surface","district"))
knitr::opts_chunk$set(echo = TRUE)
plot(cp_rf_A, show_profiles = TRUE, show_observations = TRUE,
selected_variables = c("surface","construction.year"))
plot(cp_rf_C,
show_profiles = TRUE, show_observations = FALSE,
color = "district", alpha = 1,
selected_variables = c("surface","construction.year", "district", 'no.rooms', 'floor'))
plot(cp_rf_C,
show_profiles = TRUE, show_observations = TRUE,
color = "surface", alpha = 1,
selected_variables = c("surface","construction.year"))
plot(cp_rf_C,
show_observations = FALSE, show_rugs = TRUE,
show_residuals = TRUE, color_residuals = "red", size_residuals = 2,
selected_variables = c("surface","construction.year")) +
ceteris_paribus_layer(cp_rf_C,
show_observations = FALSE, show_rugs = FALSE,
aggregate_profiles = mean, size = 2, alpha = 1,
selected_variables = c("surface","construction.year"))
devtools::load_all()
test()
devtools::load_all()
devtools::use_testthat()
?context
context('simple')
?test
test()
library("DALEX")
library("randomForest")
library("ceterisParibus")
library("rpart")
library("e1071")
library(ceterisParibusD3)
####################################
# example 1 - ICE lines with points
####################################
apartments_rf_model <- randomForest(m2.price ~ construction.year + surface + floor +
no.rooms + district,
data = apartments)
explainer_rf <- explain(apartments_rf_model,
data = apartmentsTest[,2:6],
y = apartmentsTest$m2.price)
apartments_A <- apartmentsTest[c(958,955),]
cp_rf_A <- ceteris_paribus(explainer_rf, apartments_A, y = apartments_A$m2.price)
class(cp_rf_A)
?test_that
colnames(cp_rf_A)
c('_ids_') %in% colnames(cp_rf_A)
c('_ids_', '_label_') %in% colnames(cp_rf_A)
c('_ids_', '_label_', '_vname_', '_yhat_') %in% colnames(cp_rf_A)
c('_ids_', '_label_', '_vname_', '_yhat_', 'a') %in% colnames(cp_rf_A)
sum(c('_ids_', '_label_', '_vname_', '_yhat_') %in% colnames(cp_rf_A))
sum(c('_ids_', '_label_', '_vname_', '_yhat_') %in% colnames(cp_rf_A)) == 4
attr(cp_rf_A)
attr(cp_rf_A, 'observations')
class(attr(cp_rf_A, 'observations'))
colnames(attr(cp_rf_A, 'observations'))
sum(c('_y_', '_label_', '_yhat_') %in% colnames(attr(cp_rf_A, 'observations'))) == 3
test()
devtools::use_testthat()
test()
devtools::test()
